// ограничения type - не могут наследоваться

// ==========
// ИНТЕРФЕЙСЫ
// ==========
//     В интерфейсы мо описываем обязательные и не обяательные поля, которые после этого передаем как типы
// интерфейс может регулировать класс с помощью ключевого слова implements
// класс может имплементироваться от нескольких интерфейсов сразу

// =================
// РАБОТА С КЛАССАМИ
// =================

// ===== // Модификаторы доступа
// public - свойство класса доступно из любого места программы. В TS модификатор `public` назначается всем свойствам по умолчанию
// private - свойство класса доступно только внутри класса.
// protected - свойство класса доступно внутри класса и его наследников.
// readonly - свойство класса доступно только для чтения. Важная особенность: readonly свойство должно быть реализовано при объявлении или в конструкторе.

class pew {
    public property2: string = `This property is public`;
    private property1: string = `This property is private`;
    protected property3: string = `This property is protected`;
    readonly property4: string = `This property is readonly`;
}

// ===== // Абстрактные классы и методы
// Абстрактные классы — это базовые классы, от которых наследуются другие.
// Объявляются с помощью ключевого слова 'abstract'
// Экземпляры абстрактных классов не могут быть созданы напрямую.

// Абстрактный метод это метод класса, описание реализации которого происходит в наследниках класса

